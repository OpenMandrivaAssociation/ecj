--- ecj-4.2.2/org/eclipse/jdt/internal/compiler/parser/Parser.java.0004~	2013-02-04 12:34:38.000000000 +0100
+++ ecj-4.2.2/org/eclipse/jdt/internal/compiler/parser/Parser.java	2013-05-27 17:44:11.910249247 +0200
@@ -713,6 +713,9 @@ public class Parser implements  ParserBa
 		} catch (IOException e) {
 			result = name;
 			return result;
+		} catch (NullPointerException e) {
+			result = name;
+			return result;
 		}
 		for (int i = 0; i < NT_OFFSET + 1; i++) {
 			result[i] = name[i];
--- ecj-4.2.2/org/eclipse/jdt/internal/compiler/ReadManager.java.0004~	2013-02-04 12:34:36.000000000 +0100
+++ ecj-4.2.2/org/eclipse/jdt/internal/compiler/ReadManager.java	2013-05-27 17:47:40.157645796 +0200
@@ -163,13 +163,20 @@ public void run() {
 				}
 
 				if (this.nextFileToRead >= this.units.length) return;
-				unit = this.units[this.nextFileToRead++];
-				position = this.nextAvailablePosition;
-				if (++this.nextAvailablePosition >= this.contentsRead.length)
-					this.nextAvailablePosition = 0;
-				this.filesRead[position] = unit;
-				this.contentsRead[position] = this.readInProcessMarker; // mark the spot so we know its being read
+				try {
+					unit = this.units[this.nextFileToRead++];
+					position = this.nextAvailablePosition;
+					if (++this.nextAvailablePosition >= this.contentsRead.length)
+						this.nextAvailablePosition = 0;
+					this.filesRead[position] = unit;
+					this.contentsRead[position] = this.readInProcessMarker; // mark the spot so we know its being read
+				} catch(java.lang.NullPointerException e) {
+					unit = null;
+					return;
+				}
 			}
+			if(unit == null)
+				return;
 			char[] result = unit.getContents();
 			synchronized (this) {
 				if (this.filesRead[position] == unit) {
@@ -198,4 +205,4 @@ public synchronized void shutdown() {
 	this.readingThreads = null; // mark the read manager as shutting down so that the reading threads stop
 	notifyAll();
 }
-}
\ No newline at end of file
+}
